{"entries":[{"timestamp":1739634940683,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"bluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n    basic.showIcon(IconNames.Happy)\n})\n\nlet commandValue = 0\nlet commandName = \"\"\nlet commadParts: string[] = []\nlet command = \"\"\nlet running = false;\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    commadParts = command.split(\"=\")\n    commandName = commadParts[0]\n    commandValue = parseFloat(commadParts[1])\n\n    if (commandName == \"a\") {\n        running = true\n        basic.showIcon(IconNames.Triangle)\n    }\n\n})\n\nlet data: string[] = []\nlet startTime = 0;\n\nbasic.forever(function () {\n    let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n    if (running) {\n        bluetooth.uartWriteString('clearData' + '\\n')\n        startTime = input.runningTime()\n        let time = startTime;\n\n        while (time - startTime <= 2000) {\n            time = input.runningTime()\n            data.push([time, distance].join(','))\n            basic.pause(50)\n        }\n\n        for (let row of data) {\n            bluetooth.uartWriteString(row + '\\n')\n            basic.pause(50)\n        }\n\n        data = []\n        running = false\n        basic.showIcon(IconNames.Yes)\n    }\n})"],[1,"\n"]],"start1":0,"start2":0,"length1":1288,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"microphone"],[1,"radio"],[0,"\": \""]],"start1":105,"start2":105,"length1":18,"length2":13},{"diffs":[[0,"   \""],[-1,"bluetooth\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6"],[1,"microphone\": \"*"],[0,"\"\n  "]],"start1":127,"start2":127,"length1":80,"length2":23},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }"],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":240,"start2":240,"length1":287,"length2":31}]}]},{"timestamp":1739635539949,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"le)\n"],[-1,"        bluetooth.uartWriteString('clearData' + '\\n')\n"],[0,"    "]],"start1":595,"start2":595,"length1":62,"length2":8},{"diffs":[[0,"    "],[-1,"if (running) { //  && distance > 10"],[1,"let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n    if (running) {\n        bluetooth.uartWriteString('clearData' + '\\n')"],[0,"\n   "]],"start1":682,"start2":682,"length1":43,"length2":158},{"diffs":[[0,") {\n"],[-1,"            let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n"],[0,"    "]],"start1":947,"start2":947,"length1":98,"length2":8}]}]},{"timestamp":1739635862222,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n    if (running && distance > 10"],[1,"if (running"],[0,") { "]],"start1":736,"start2":736,"length1":118,"length2":19},{"diffs":[[0,"    basic.pause("],[-1,"2"],[1,"5"],[0,"0)\n        }\n\n  "]],"start1":1077,"start2":1077,"length1":33,"length2":33},{"diffs":[[0,"c.pause("],[-1,"2"],[1,"5"],[0,"0)\n     "]],"start1":1206,"start2":1206,"length1":17,"length2":17}]}]},{"timestamp":1739636400536,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"])\n\n"],[-1,"    if (commandName == \"-v\") {\n        bluetooth.uartWriteString('clearData' + '\\n')\n    }\n\n"],[0,"    "]],"start1":499,"start2":499,"length1":100,"length2":8},{"diffs":[[0,"e > "],[-1,"5"],[1,"10"],[0,") { "]],"start1":844,"start2":844,"length1":9,"length2":10},{"diffs":[[0,"Time <= "],[-1,"1"],[1,"2"],[0,"000) {\n "]],"start1":973,"start2":973,"length1":17,"length2":17}]}]},{"timestamp":1739636955180,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"se;\n"],[-1,"let ma"],[0,"\nblu"]],"start1":222,"start2":222,"length1":14,"length2":8}]}]},{"timestamp":1739637805806,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"t ma"],[-1,"x"],[0,"\nblu"]],"start1":228,"start2":228,"length1":9,"length2":8}]}]},{"timestamp":1739637806096,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," max"],[-1,"Time = 1;\n"],[0,"\nblu"]],"start1":229,"start2":229,"length1":18,"length2":8},{"diffs":[[0," \"a\""],[-1," || commandName == \"start\""],[0,") {\n"]],"start1":624,"start2":624,"length1":34,"length2":8},{"diffs":[[0,"  }\n"],[-1,"    \n    if (commandName == \"maxTime\") {\n        maxTime = commandValue\n    }\n\n})\n\nlet data: string[] = []\nlet startTime = 0;\n\nfunction getTime() {\n    return input.runningTime() / 1000\n}"],[1,"\n})\n\nlet data: string[] = []\nlet startTime = 0;"],[0,"\n\nba"]],"start1":754,"start2":754,"length1":195,"length2":55},{"diffs":[[0,"startTime = "],[-1,"get"],[1,"input.running"],[0,"Time()\n     "]],"start1":981,"start2":981,"length1":27,"length2":37},{"diffs":[[0," <= "],[-1,"maxTime"],[1,"1000"],[0,") {\n"]],"start1":1075,"start2":1075,"length1":15,"length2":12},{"diffs":[[0,"e = "],[-1,"get"],[1,"input.running"],[0,"Time"]],"start1":1192,"start2":1192,"length1":11,"length2":21},{"diffs":[[0,"sh([time"],[-1," - startTime"],[0,", distan"]],"start1":1235,"start2":1235,"length1":28,"length2":16}]}]},{"timestamp":1739638124691,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"urn "],[-1,"Math."],[0,"inpu"]],"start1":949,"start2":949,"length1":13,"length2":8}]}]},{"timestamp":1739638950463,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ath."],[-1,"round"],[0,"inpu"]],"start1":954,"start2":954,"length1":13,"length2":8}]}]},{"timestamp":1739638978859,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 1;"],[-1,"\nlet minDistance = 10;"],[0,"\n\nbl"]],"start1":238,"start2":238,"length1":30,"length2":8},{"diffs":[[0,"th.round"],[-1,"("],[0,"input.ru"]],"start1":955,"start2":955,"length1":17,"length2":16},{"diffs":[[0,"/ 10"],[-1,")/1"],[0,"00\n}"]],"start1":983,"start2":983,"length1":11,"length2":8},{"diffs":[[0,"e > "],[-1,"minDistance"],[1,"5"],[0,") { "]],"start1":1129,"start2":1129,"length1":19,"length2":9},{"diffs":[[0,"time"],[-1,", time"],[0," - s"]],"start1":1408,"start2":1408,"length1":14,"length2":8}]}]},{"timestamp":1739639482307,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"alue"],[-1,"\n\n        bluetooth.uartWriteString(maxTime + '\\n')"],[0,"\n   "]],"start1":883,"start2":883,"length1":59,"length2":8},{"diffs":[[0,"ime;"],[-1,"\n        let dTime = 0;"],[0,"\n\n  "]],"start1":1250,"start2":1250,"length1":31,"length2":8},{"diffs":[[0," while ("],[-1,"d"],[1,"time - start"],[0,"Time <= "]],"start1":1263,"start2":1263,"length1":17,"length2":28},{"diffs":[[0,"e()\n"],[-1,"            dTime = time - startTime\n"],[0,"    "]],"start1":1417,"start2":1417,"length1":45,"length2":8},{"diffs":[[0,"([time, "],[-1,"d"],[1,"time - start"],[0,"Time, di"]],"start1":1442,"start2":1442,"length1":17,"length2":28},{"diffs":[[0,"ance"],[-1,", (dTime**2)/2"],[0,"].jo"]],"start1":1472,"start2":1472,"length1":22,"length2":8}]}]},{"timestamp":1739639984192,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," return "],[1,"Math.round("],[0,"input.ru"]],"start1":1018,"start2":1018,"length1":16,"length2":27},{"diffs":[[0,"me()"],[1," / 10)"],[0,"/1"],[-1,"0"],[0,"00\n}"]],"start1":1052,"start2":1052,"length1":11,"length2":16}]}]},{"timestamp":1739640550505,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," 10;"],[-1,"\nlet maxDistance = 0;\nlet samplingTime = 10;"],[0,"\n\nbl"]],"start1":260,"start2":260,"length1":52,"length2":8},{"diffs":[[0," = commandValue\n"],[1,"\n"],[0,"        bluetoot"]],"start1":872,"start2":872,"length1":32,"length2":33},{"diffs":[[0," }\n\n"],[-1,"    if (commandName == \"minDistance\") {\n        minDistance = commandValue\n        bluetooth.uartWriteString(minDistance + '\\n')\n    }\n\n    if (commandName == \"maxDistance\") {\n        maxDistance = commandValue\n        bluetooth.uartWriteString(maxDistance + '\\n')\n    }\n\n"],[0,"})\n\n"]],"start1":942,"start2":942,"length1":280,"length2":8},{"diffs":[[0,"= 0;"],[-1,"\n        let distance = 0;"],[0,"\n\n  "]],"start1":1308,"start2":1308,"length1":34,"length2":8},{"diffs":[[0,"Time"],[-1," || (maxDistance && distance < maxDistance)"],[0,") {\n"]],"start1":1341,"start2":1341,"length1":51,"length2":8},{"diffs":[[0,"        "],[1,"let "],[0,"distance"]],"start1":1353,"start2":1353,"length1":16,"length2":20},{"diffs":[[0,"use("],[-1,"samplingTime"],[1,"20"],[0,")\n  "]],"start1":1596,"start2":1596,"length1":20,"length2":10}]}]},{"timestamp":1739641109611,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"gTime = "],[-1,"2"],[1,"1"],[0,"0;\n\nblue"]],"start1":297,"start2":297,"length1":17,"length2":17},{"diffs":[[0,"ime "],[-1,"&&"],[1,"||"],[0," ("],[-1,"!"],[0,"maxD"]],"start1":1683,"start2":1683,"length1":13,"length2":12},{"diffs":[[0,"istance "],[-1,"||"],[1,"&&"],[0," distanc"]],"start1":1695,"start2":1695,"length1":18,"length2":18}]}]},{"timestamp":1739641270438,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"2#M6,=*[16eWw$eTH,Fl\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"RViqp6MFpwCl5!unwEP^\""],[0," x=\""]],"start1":151,"start2":151,"length1":34,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ieszenie"],[1," 2"],[0,"\",\n    \""]],"start1":21,"start2":21,"length1":16,"length2":18},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":297,"start2":297,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1739634940682,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Przyspieszenie 2\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1739636786428,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"bluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n    basic.showIcon(IconNames.Happy)\n})\n\nlet commandValue = 0\nlet commandName = \"\"\nlet commadParts: string[] = []\nlet command = \"\"\nlet running = false;\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    commadParts = command.split(\"=\")\n    commandName = commadParts[0]\n    commandValue = parseFloat(commadParts[1])\n\n    if (commandName == \"a\") {\n        running = true\n        basic.showIcon(IconNames.Triangle)\n        bluetooth.uartWriteString('clearData' + '\\n')\n    }\n\n})\n\nlet data: string[] = []\nlet startTime = 0;\n\nbasic.forever(function () {\n    let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n    if (running && distance > 5) { //  && distance > 10\n        startTime = input.runningTime()\n        let time = startTime;\n\n        while (time - startTime <= 1000) {\n            let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n            time = input.runningTime()\n            data.push([time, distance].join(','))\n            // basic.pause(20)\n        }\n\n        for (let row of data) {\n            bluetooth.uartWriteString(row + '\\n')\n            basic.pause(20)\n        }\n\n        data = []\n        running = false\n        basic.showIcon(IconNames.Yes)\n    }\n})","README.md":"","pxt.json":"{\n    \"name\": \"Przyspieszenie 2\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n"}},{"timestamp":1739638950463,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"bluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n    basic.showIcon(IconNames.Happy)\n})\n\nlet commandValue = 0\nlet commandName = \"\"\nlet commadParts: string[] = []\nlet command = \"\"\nlet running = false;\nlet maxTime = 1;\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    commadParts = command.split(\"=\")\n    commandName = commadParts[0]\n    commandValue = parseFloat(commadParts[1])\n\n    if (commandName == \"-v\") {\n        bluetooth.uartWriteString('clearData' + '\\n')\n    }\n\n    if (commandName == \"a\" || commandName == \"start\") {\n        running = true\n        basic.showIcon(IconNames.Triangle)\n        bluetooth.uartWriteString('clearData' + '\\n')\n    }\n    \n    if (commandName == \"maxTime\") {\n        maxTime = commandValue\n    }\n\n})\n\nlet data: string[] = []\nlet startTime = 0;\n\nfunction getTime() {\n    return input.runningTime() / 1000\n}\n\nbasic.forever(function () {\n    let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n    if (running && distance > 5) { //  && distance > 10\n        startTime = getTime()\n        let time = startTime;\n\n        while (time - startTime <= maxTime) {\n            let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n            time = getTime()\n            data.push([time - startTime, distance].join(','))\n            basic.pause(20)\n        }\n\n        for (let row of data) {\n            bluetooth.uartWriteString(row + '\\n')\n            basic.pause(20)\n        }\n\n        data = []\n        running = false\n        basic.showIcon(IconNames.Yes)\n    }\n})","README.md":"","pxt.json":"{\n    \"name\": \"Przyspieszenie 2\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n"}},{"timestamp":1739640772423,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"bluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n    basic.showIcon(IconNames.Happy)\n})\n\nlet commandValue = 0\nlet commandName = \"\"\nlet commadParts: string[] = []\nlet command = \"\"\nlet running = false;\nlet maxTime = 1;\nlet minDistance = 10;\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    commadParts = command.split(\"=\")\n    commandName = commadParts[0]\n    commandValue = parseFloat(commadParts[1])\n\n    if (commandName == \"-v\") {\n        bluetooth.uartWriteString('clearData' + '\\n')\n    }\n\n    if (commandName == \"a\" || commandName == \"start\") {\n        running = true\n        basic.showIcon(IconNames.Triangle)\n        bluetooth.uartWriteString('clearData' + '\\n')\n    }\n    \n    if (commandName == \"maxTime\") {\n        maxTime = commandValue\n\n        bluetooth.uartWriteString(maxTime + '\\n')\n    }\n\n})\n\nlet data: string[] = []\nlet startTime = 0;\n\nfunction getTime() {\n    return input.runningTime()/1000\n}\n\nbasic.forever(function () {\n    let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n    if (running && distance > minDistance) { //  && distance > 10\n        startTime = getTime()\n        let time = startTime;\n        let dTime = 0;\n\n        while (dTime <= maxTime) {\n            let distance = sonar.ping(DigitalPin.P1, DigitalPin.P2, PingUnit.Centimeters)\n            time = getTime()\n            dTime = time - startTime\n            data.push([time, dTime, distance, (dTime**2)/2].join(','))\n            basic.pause(20)\n        }\n\n        for (let row of data) {\n            bluetooth.uartWriteString(row + '\\n')\n            basic.pause(20)\n        }\n\n        data = []\n        running = false\n        basic.showIcon(IconNames.Yes)\n    }\n})","README.md":"","pxt.json":"{\n    \"name\": \"Przyspieszenie 2\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n"}}],"shares":[],"lastSaveTime":1739641736524}